---
layout: post
title:  "Schedule"
category: schedule
---

#### September 1, 2016 ####
**Speaker**: Leo Osvald

**Title**: 

**Abstract**: First-class functions dramatically increase expressiveness, at the expense of static guarantees. In ALGOL or PASCAL, functions could be passed as arguments but never escape their defining scope. Thus, function arguments could serve as temporary access tokens or capabilities, enabling callees to perform some action, but only for the duration of the call. In modern languages, such programming patterns are no longer available.

The central thrust of this paper is to re-introduce second-class functions and other values alongside first-class entities in modern languages. We formalize second-class values with stack-bounded lifetimes as an extension to simply-typed lambda calculus, and for richer type systems such as F<: and systems with path-dependent types. We generalize the binary first vs second-class distinction to arbitrary privilege lattices, with the underlying type lattice as a special case. In this setting, abstract types naturally enable privilege parametricity. We prove type soundness and lifetime properties in Coq.

We implement our system as an extension of Scala, and present several case studies. First, we modify the Scala Collections library and add privilege annotations to all higher-order functions. Privilege parametricity is key to retain the high degree of code-reuse between sequential and parallel as well as lazy and eager collections. Second, we use scoped capabilities to introduce a model of checked exceptions in the Scala library, with only few changes to the code. Third, we employ second-class capabilities for memory safety in a region-based off-heap memory library.


#### September 8, 2016 ####
**Speaker**: Jad Hbeika

**Title**: Locality-aware Task-parallel Execution on GPUs

**Abstract**: 
GPGPUs deliver high speedup for regular applications while remaining energy efficient. In recent years, there has been much focus on tuning irregular, task-parallel applications and/or the GPU architecture in order to achieve similar benefits for irregular applications running on GPUs. While most of the previous works have focused on minimizing the effect of control and memory divergence, which are prominent in irregular applications and which degrade the performance, there has been less attention paid to decreasing cache pressure and hence improving performance of applications given the small cache sizes on GPUs. In this paper we tackle two problems. First we extract data parallelism from irregular task parallel applications, which we do by subdividing each task into sub tasks at the CPU side and sending these sub tasks to the GPU for execution. By doing so we take advantage of the massive parallelism provided by the GPU. Second, to mitigate the memory demands of many tasks that access irregular data structures, we schedule these subtasks in a way to minimize the memory footprint of each warp running on the GPU. We use our framework with 3 task-parallel algorithms and show that we can achieve significant speedups over optimized GPU code.

#### September 15, 2016 ####
**Speaker**: TBA

**Title**: TBA

**Abstract**:
TBA

#### September 22, 2016 ####
**Speakers**: Ruby Tahboub and Gegory Essertel

**Title**: TBA

**Abstract**:
TBA

#### September 29, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### October 6, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### October 13, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### October 20, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### October 27, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### November 3, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### November 10, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### November 17, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### November 24, 2016 ####
**Speaker**: N/A - Thanksgiving

**Title**: N/A

**Abstract**: N/A

#### December 1, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA

#### December 8, 2016 ####
**Speaker**: Vacant

**Title**: TBA

**Abstract**: TBA
